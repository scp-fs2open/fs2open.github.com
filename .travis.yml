language: generic
sudo: required
dist: trusty
cache:
    directories:
    - $HOME/cmake
addons:
    apt:
        packages:
            - ninja-build
            - libopenal-dev
            - libogg-dev
            - libvorbis-dev
            - libtheora-dev
            - libreadline6-dev
            - libpng12-dev
            - libjpeg62-dev
            - liblua5.1-0-dev
            - libjansson-dev
            - libsdl2-dev
    coverity_scan:
        project:
            name: "scp-fs2open/fs2open.github.com"
        notification_email: niffiwan.scp@gmail.com
        build_command:   "ci/travis/script.sh"
        # must match TRAVIS_BRANCH check below
        branch_pattern: coverity_scan
deploy:
    - provider: releases
      api_key:
          secure: "Wdt4Ccefo7a0ZDjEJQJgpghh7n72FtNJuKSAPUvoz4gtEX6Ct9J8yJI1t9V3jE3CTbbLJ21/Q6eZRDfT7UfNJe5DdepoJsP9DeFhKMWqQCq+AChqQWlm0KeZAffJoJreL8vXYhnRYcLT9ceZHEH6AqwN9TPV+xJziGPISAkYNZ8="
      skip_cleanup: true 
      file_glob: true
      file: "/tmp/builds/*"
      on:
          condition: '"$RELEASE_BUILD" == true'
          tags: true
        
    - provider: bintray
      user: sirknightly
      key:
          secure: "CZtvDW/zPf1Nxru21i8Wd+9hgiBRA8VowWBX0gmCOGgRq9WHISttKQQmBWGHuyVZ3rYvtE4Va2bR+2qRN+TFNkUUuOCOQkdBJTCal9nS3G/LprEmsOashG0Q5PTfMMBnlKzKxaxGJW6UhFj2GySmHEAjsFLVpuNWGJeeZgZQ3UE="
      file: ci/bintray.json
      on:
          condition: '"$NIGHTLY_BUILD" == true'
          tags: true
env:
    global:
     # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
     #   via the "travis encrypt" command using the project repo's public key
     #   also note that fork's don't get access to secure keys
     #   you have to test using a branch in the main repo
     - secure: "C3wF967ZeliwwP1vC12EMIBOaC568n26Z/cPnwzn317ve59DWH3YSfPZVgvt08GzmaXITGGsJvPB+qxfGoKvQzYE4O1B73q81RpUe5pB3IhF+ThQ91VfQZIRJR5xEGJaLINUlHTTZGX5jxlkVO9wAcauVj/s3b8sQ3dvUZauPvk="
matrix:
    include:
        # note that gcc Debug MUST be 1st for Coverity
        - os: linux
          compiler: gcc
          env: CONFIGURATION="Debug"
        - os: linux
          compiler: clang
          env: CONFIGURATION="Debug" CC=clang CXX=clang++
        - os: osx
          compiler: clang
          env: CONFIGURATION="Debug"

        - os: linux
          compiler: gcc
          env: CONFIGURATION="Release"
        - os: linux
          compiler: clang
          env: CONFIGURATION="Release" CC=clang CXX=clang++
        - os: osx
          compiler: clang
          env: CONFIGURATION="Release"
before_install:
    # ugly hack; if running a coverity scan abort all except the 1st build
    # see note re gcc compiler above needing to be 1st
    # also note that branch_pattern & the TRAVIS_BRANCH check must match
    # unfortunately COVERITY_SCAN_BRANCH isn't defined until later in the
    # build process
    - if ([[ "${TRAVIS_JOB_NUMBER##*.}" != "1" ]] && [[ "${TRAVIS_BRANCH}" == "coverity_scan" ]]); then false ; fi
    - source "./ci/travis/check_release.sh"
    - "./ci/travis/before_install.sh"
install:
    - "./ci/travis/install.sh"
    - export PATH=$HOME/cmake/bin:$PATH
before_script:
    - "./ci/travis/before_script.sh"
script:
    - if [ "$BUILD_DEPLOYMENT" = true ] ; then ./ci/travis/release.sh ; else ./ci/travis/script.sh ; fi
before_deploy:
    - "./ci/travis/before_deploy.sh"
